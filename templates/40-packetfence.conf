{{ ansible_managed | comment }}

input(type="imfile"
         File="/var/log/nginx/access.log"
         Tag="nginx"
         Severity="notice"
         Facility="local3"
)

input(type="imfile"
         File="/var/log/nginx/error.log"
         Tag="nginx"
         Severity="error"
         Facility="local3"
)

# fingerbank.log
if $syslogtag contains "fingerbank" then {
  -/usr/local/pf/logs/fingerbank.log
  stop
}

# httpd.aaa.error
if $programname contains "httpd_aaa_err" then {
  -/usr/local/pf/logs/httpd.aaa.error
  stop
}

# httpd.aaa.access
if $programname contains "httpd_aaa" then {
  -/usr/local/pf/logs/httpd.aaa.access
  stop
}

# httpd.admin.access
if $syslogtag contains "httpd_admin_access" then {
  -/usr/local/pf/logs/httpd.admin.access
stop
}

# httpd.admin.catalyst
if $syslogtag contains "admin_catalyst" then {
  -/usr/local/pf/logs/httpd.admin.catalyst
stop
}

# httpd.admin.error
if $syslogtag contains "httpd_admin_err" then {
  -/usr/local/pf/logs/httpd.admin.error
stop
}

# httpd.admin.log
if $syslogtag contains "httpd_admin" then {
  -/usr/local/pf/logs/httpd.admin.log
stop
}

# httpd.collector.error
if $syslogtag contains "httpd_collector_err" then {
  -/usr/local/pf/logs/httpd.collector.error
stop
}

# httpd.collector.log
if $syslogtag contains "httpd_collector" then {
  -/usr/local/pf/logs/httpd.collector.log
stop
}

# httpd.parking.error
if $syslogtag contains "httpd_parking_err" then {
  -/usr/local/pf/logs/httpd.parking.error
stop
}

# httpd.parking.access
if $syslogtag contains "httpd_parking" then {
  -/usr/local/pf/logs/httpd.parking.access
stop
}

# httpd.portal.error
if $syslogtag contains "httpd_portal_err" then {
  -/usr/local/pf/logs/httpd.portal.error
stop
}

# httpd.portal.access
if $syslogtag contains "httpd_portal" then {
  -/usr/local/pf/logs/httpd.portal.access
stop
}

# httpd.portal.catalyst
if $syslogtag contains "portal_catalyst" then {
  -/usr/local/pf/logs/httpd.portal.catalyst
stop
}

# httpd.proxy.error
if $syslogtag contains "httpd_proxy_err" then {
  -/usr/local/pf/logs/httpd.proxy.error
stop
}

# httpd.proxy.access
if $syslogtag contains "httpd_proxy" then {
  -/usr/local/pf/logs/httpd.proxy.access
stop
}

# httpd.webservices.error
if $programname contains "httpd_webservices_err" then {
  -/usr/local/pf/logs/httpd.webservices.error
stop
}

# httpd.webservices.access
if $programname contains "httpd_webservices" then {
  -/usr/local/pf/logs/httpd.webservices.access
stop
}

# httpd.api-frontend.access
if $msg contains "api-frontend-access" then {
  -/usr/local/pf/logs/httpd.api-frontend.access
stop
}

# api-frontend.log
if $programname == "api-frontend" then {
  -/usr/local/pf/logs/api-frontend.log
stop
}

# pfstats.log
if $programname == "pfstats" then {
  -/usr/local/pf/logs/pfstats.log
stop
}

# packetfence.log
if $syslogtag contains "packetfence" then {
  -/usr/local/pf/logs/packetfence.log
stop
}

# packetfence.log
if $programname == "pfqueue" then {
  -/usr/local/pf/logs/packetfence.log
stop
}

# packetfence.log
if $programname == "pfhttpd" then {
  -/usr/local/pf/logs/packetfence.log
stop
}

# packetfence.log
if $programname == "pfipset" then {
  -/usr/local/pf/logs/packetfence.log
stop
}

# packetfence.log
if $programname == "pfdhcp" then {
  -/usr/local/pf/logs/packetfence.log
stop
}

# pfbandwidthd.log
if $programname == "pfbandwidthd" then {
  -/usr/local/pf/logs/pfbandwidthd.log
stop
}

# pfconfig.log
if $programname == "pfconfig" then {
  -/usr/local/pf/logs/pfconfig.log
stop
}

# pfdetect.log
if $programname == "pfdetect" then {
  -/usr/local/pf/logs/pfdetect.log
stop
}

# pfdhcplistener.log
if $syslogtag contains "pfdhcplistener" then {
  -/usr/local/pf/logs/pfdhcplistener.log
stop
}

# pfdns.log
if $programname == "pfdns" then {
  -/usr/local/pf/logs/pfdns.log
stop
}

# pffilter.log
if $programname == "pffilter" then {
  -/usr/local/pf/logs/pffilter.log
stop
}

# pfmon.log
if $programname == "pfmon" then {
  -/usr/local/pf/logs/pfmon.log
stop
}

# pfsso.log
if $programname == "pfsso" then {
  -/usr/local/pf/logs/pfsso.log
stop
}

# radius-acct.log
if $programname contains "radius" and $syslogfacility-text == "local2" then {
  -/usr/local/pf/logs/radius-acct.log
stop
}

# radius-acct.log
if $syslogtag contains "acct" and $syslogfacility-text == "local2" then {
  -/usr/local/pf/logs/radius-acct.log
stop
}

# radius-cli.log
if $syslogtag contains "cli" and $syslogfacility-text == "local3" then {
  -/usr/local/pf/logs/radius-cli.log
stop
}

# radius-eduroam.log
if $syslogtag contains "eduroam"  then {
  -/usr/local/pf/logs/radius-eduroam.log
stop
}

# radius-load_balancer.log
if $syslogtag contains "load_balancer" and $syslogfacility-text == "local5" then {
  -/usr/local/pf/logs/radius-load_balancer.log
stop
}

# radius.log
if $syslogtag contains "auth" and $syslogfacility-text == "local1" then {
  -/usr/local/pf/logs/radius.log
stop
}

# radius.log
if $programname contains "radius" and $syslogfacility-text == "local1" then {
  -/usr/local/pf/logs/radius.log
stop
}

# redis_cache.log
if $syslogtag contains "redis-cache" then {
  -/usr/local/pf/logs/redis_cache.log
stop
}

# redis_ntlm_cache.log
if $syslogtag contains "redis-ntlm-cache" then {
  -/usr/local/pf/logs/redis_ntlm_cache.log
stop
}

# redis_queue.log
if $syslogtag contains "redis-queue" then {
  -/usr/local/pf/logs/redis_queue.log
stop
}

# redis_server.log
if $programname == "redis-server" then {
  -/usr/local/pf/logs/redis_server.log
stop
}

# mariadb_error.log
if $syslogtag contains "mysqld" then {
  -/usr/local/pf/logs/mariadb_error.log
stop
}

# haproxy_portal.log
if $programname == "haproxy" and ($msg contains "portal-http" or $msg contains "backend has no server available") then {
  -/usr/local/pf/logs/haproxy_portal.log
stop
}

# haproxy_db.log
if $programname == "haproxy" and ($msg contains "mysql" or $msg contains "backend has no server available") then {
  -/usr/local/pf/logs/haproxy_db.log
stop
}
